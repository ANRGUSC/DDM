{
  "_from": "uint8array-json-parser",
  "_id": "uint8array-json-parser@0.0.1",
  "_inBundle": false,
  "_integrity": "sha512-ZhpEr+kkXGB1cRuPN7prlZJuXnnXy69y2IIdqS2PECZmIp8LLOl9X0+njxNub+3ODrXtaWGdtezNF7ZWydkOUg==",
  "_location": "/uint8array-json-parser",
  "_phantomChildren": {
    "source-map": "0.5.7"
  },
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "uint8array-json-parser",
    "name": "uint8array-json-parser",
    "escapedName": "uint8array-json-parser",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/uint8array-json-parser/-/uint8array-json-parser-0.0.1.tgz",
  "_shasum": "9eeadf89e84aa90782364bc59fa31ed0fdeaafa3",
  "_spec": "uint8array-json-parser",
  "_where": "/Users/zongtian/blockchain",
  "bundleDependencies": false,
  "dependencies": {
    "typescript": "2.4.2",
    "uglify-js": "3.0.27"
  },
  "deprecated": false,
  "description": "V8's maximum string size prevents using JSON.parse() for large JSON files. This module exposes JSON_parse() that should behave similarly to JSON.parse() except it expects a Uint8Array instead of a String. Using a Uint8Array lets it scale to much larger JSON files than the native JSON.parse(). It appears to be roughly 4x slower than the native implementation.",
  "license": "MIT",
  "main": "uint8array-json-parser.js",
  "name": "uint8array-json-parser",
  "scripts": {
    "build": "tsc && uglifyjs -cm -o uint8array-json-parser.min.js -- uint8array-json-parser.js"
  },
  "version": "0.0.1"
}
